{"version":3,"file":"static/js/289.732738d8.chunk.js","mappings":"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","sources":["utils/isAvailableImage.js","Api.js","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MovieDetails.js"],"sourcesContent":["import defaultImage from 'images/no-image.gif';\n\nexport function isAvailableImage(path) {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}","import axios from \"axios\";\nimport { isAvailableImage } from \"utils/isAvailableImage\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"bf90c64edd4fb3718c72a5077448d3a4\";\n\nexport async function fetchTrandingMovies () {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  \n    const movies = response.data.results.map(({ id, title }) => {\n      return {\n        id,\n        title,\n      }\n    }\n  )\n\n  return { movies };\n};\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n\n  const { title, poster_path, overview, genres, vote_average, release_date } = response.data;\n\n  return {\n      title,\n      posterPath: isAvailableImage(poster_path),\n      overview,\n      genres: genres.map(genre => genre.name).join(', '),\n      vote: vote_average.toFixed(1)*10,\n      year: release_date.slice(0, 4),\n  };\n};\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n\n  const movieCast = response.data.cast.map(\n    ({ id, name, profile_path, character }) => {\n      return {\n        id,\n        name,\n        profile_path: isAvailableImage(profile_path),\n        character,\n      }\n    }\n  );\n\n  return movieCast;\n\n};\n\n\nexport async function fetchMovieReview(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n\n  const movieReview = response.data.results.map(\n    ({ id, author, content }) => {\n      return {\n        id,\n        author,\n        content,\n      }\n    }\n  );\n\n  return movieReview;\n};\n\n\nexport async function fetchMoviesByQuery(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\n  \n    const movies = response.data.results.map(({ id, title }) => {\n      return {\n        id,\n        title,\n      }\n    }\n  )\n\n  return { movies, totalResults: response.data.total_results };\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n  height: 24px;\n  width: 130px;\n  text-decoration: none;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  background-color: #3B3B7C;\n  color: #FFF;\n  border-radius: 10px;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover,\n  &:focus-visible {\n    background-color: #4AB51A;\n    color: #ebebeb;\n  }\n`;\n\nexport const Main = styled.main`\n  padding-top: 40px;\n  padding-bottom: 40px;\n  flex-grow: 1;\n`;\n\nexport const Container = styled.div`\n  max-width: 320px;\n  margin: 0 auto;\n  padding: 0 20px;\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  @media screen and (min-width: 768px) {\n    width: 250px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 300px;\n  }\n`;\n\nexport const Navigation = styled.nav`\n  display: flex;\n  justify-content: left;\n  gap: 30px;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const Rate = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 150px;\n  height: 30px;\n  background-color: #3B3B7C;\n  color: #ebebeb;\n  font-size: 18px;\n  border-radius: 5px;\n`;","import { Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { IoIosArrowRoundBack } from 'react-icons/io';\nimport Loader from 'components/Loader';\n\nimport {\n  StyledLink,\n  Main,\n  Container,\n  MovieInfo,\n  Image,\n  Navigation,\n  MovieInfoWrapper,\n  Rate,\n} from './Movie.styled';\n\nfunction Movie({ movie: { title, posterPath, overview, genres, vote, year } }) {\n  const { state, pathname } = useLocation();\n\n  return (\n    <Main>\n        <Container>\n          <StyledLink to={state?.from ?? '/'}>\n            <IoIosArrowRoundBack /> Go back\n          </StyledLink>\n        \n          <MovieInfo>\n            <Image src={posterPath} alt={title} />\n          \n            <div>\n              <MovieInfoWrapper>\n                <h1>{title} ({year ? year : 'xxxx'})</h1>\n                {vote !== 0 && <Rate>User rates: {vote}%</Rate>}\n              </MovieInfoWrapper>\n            \n              <h2>Overview</h2>\n                {overview ? <p>{overview}</p> : 'Information is not available'}\n              <h2>Genres</h2>\n                {genres ? <p>{genres}</p> : 'Information is not available'}\n            </div>\n          </MovieInfo>\n        \n          <Navigation>\n            <StyledLink to={pathname.includes('cast') ? '' : 'cast'} state={{ from: state?.from ?? '/' }}>\n              {pathname.includes('cast') ? 'Hide Cast' : 'Show Cast'}\n            </StyledLink>\n          \n            <StyledLink to={pathname.includes('reviews') ? '' : 'reviews'} state={{ from: state?.from ?? '/' }}>\n              {pathname.includes('reviews') ? 'Hide Reviews' : 'Show Reviews'}\n            </StyledLink>\n          </Navigation>\n\n          <Suspense fallback={<Loader/>}>\n            <Outlet />\n          </Suspense>\n\n        </Container>\n      </Main>\n  );\n}\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.string,\n    vote: PropTypes.number,\n    year: PropTypes.string,\n  }).isRequired,\n};\nexport default Movie;","import { fetchMovieById } from \"Api\";\nimport { useState, useEffect } from 'react';\nimport Loader from \"components/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport Movie from \"components/Movie/Movie\";\n\nexport const MovieDetails = () => {\n\n    const [movieDetails, setMovieDetails] = useState('');\n    const [status, setStatus] = useState('idle');\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n\n        if (!movieId) return;\n        \n        const getMovieById = async () => {\n            setStatus('pending');\n            try {\n                const movie = await fetchMovieById(movieId);\n                setMovieDetails(movie);\n                setStatus('resolved');\n            }\n            catch (error) {\n                console.error(error);\n            }\n        }\n\n        getMovieById();\n    }, [movieId]);\n        \n    return (\n        <>\n        {status === 'pending' && <Loader />}\n        {status === 'resolved' && <Movie movie={movieDetails} />}\n        </>\n    )\n}\n\n\nexport default MovieDetails;"],"names":["isAvailableImage","path","defaultImage","BASE_URL","API_KEY","fetchTrandingMovies","axios","response","movies","data","results","map","id","title","fetchMovieById","movieId","poster_path","overview","genres","vote_average","release_date","posterPath","genre","name","join","vote","toFixed","year","slice","fetchMovieCast","movieCast","cast","profile_path","character","fetchMovieReview","movieReview","author","content","fetchMoviesByQuery","query","totalResults","total_results","StyledLink","styled","Link","Main","Container","MovieInfo","Image","Navigation","MovieInfoWrapper","Rate","movie","useLocation","state","pathname","to","from","src","alt","includes","Suspense","fallback","Loader","MovieDetails","useState","movieDetails","setMovieDetails","status","setStatus","useParams","useEffect","getMovieById","console","error"],"sourceRoot":""}