{"version":3,"file":"static/js/566.799c6d9c.chunk.js","mappings":"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","sources":["utils/isAvailableImage.js","Api.js","components/ReviewGallery/ReviewGallery.styled.jsx","components/ReviewGallery/ReviewGallery.jsx","components/MovieReview/MovieReview.jsx"],"sourcesContent":["import defaultImage from 'images/no-image.gif';\n\nexport function isAvailableImage(path) {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}","import axios from \"axios\";\nimport { isAvailableImage } from \"utils/isAvailableImage\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"bf90c64edd4fb3718c72a5077448d3a4\";\n\nexport async function fetchTrandingMovies () {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  \n    const movies = response.data.results.map(({ id, title }) => {\n      return {\n        id,\n        title,\n      }\n    }\n  )\n\n  return { movies };\n};\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n\n  const { title, poster_path, overview, genres, vote_average, release_date } = response.data;\n\n  return {\n      title,\n      posterPath: isAvailableImage(poster_path),\n      overview,\n      genres: genres.map(genre => genre.name).join(', '),\n      vote: vote_average.toFixed(1)*10,\n      year: release_date.slice(0, 4),\n  };\n};\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n\n  const movieCast = response.data.cast.map(\n    ({ id, name, profile_path, character }) => {\n      return {\n        id,\n        name,\n        profile_path: isAvailableImage(profile_path),\n        character,\n      }\n    }\n  );\n\n  return movieCast;\n\n};\n\n\nexport async function fetchMovieReview(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n\n  const movieReview = response.data.results.map(\n    ({ id, author, content }) => {\n      return {\n        id,\n        author,\n        content,\n      }\n    }\n  );\n\n  return movieReview;\n};\n\n\nexport async function fetchMoviesByQuery(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\n  \n    const movies = response.data.results.map(({ id, title }) => {\n      return {\n        id,\n        title,\n      }\n    }\n  )\n\n  return { movies, totalResults: response.data.total_results };\n};","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  gap: 15px;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 15px;\n  list-style: none;\n  border: 3px solid #3B3B7C;\n  border-radius: 10px;\n`;\n\nexport const ReviewTitle = styled.h2`\n    color: #3B3B7C;\n`","import PropTypes from 'prop-types';\nimport {\n    ReviewsList,\n    ReviewItem,\n    ReviewTitle\n} from './ReviewGallery.styled';\n\nfunction ReviewGallery({ items }) {\n    return (\n        <ReviewsList>\n            {items.map(({ id, author, content }) => (\n                <ReviewItem key={id}>\n                <ReviewTitle>{author}</ReviewTitle>\n                <p>{content}</p>\n                </ReviewItem>\n            ))}\n        </ReviewsList>\n    );\n}\n\nReviewGallery.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default ReviewGallery;","import { fetchMovieReview } from \"Api\";\nimport { useState, useEffect } from 'react';\nimport Loader from \"components/Loader\";\nimport { useParams } from \"react-router-dom\";\nimport ReviewGallery from \"components/ReviewGallery\";\n\nexport const MovieReview = () => {\n\n    const [movieReview, setMovieReview] = useState('');\n    const [status, setStatus] = useState('idle');\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n\n        if (!movieId) return;\n        \n        const getMovieReview = async () => {\n            setStatus('pending');\n            try {\n                const Review = await fetchMovieReview(movieId);\n                setMovieReview(Review);\n                setStatus('resolved');\n            }\n            catch (error) {\n                console.error(error);\n            }\n        }\n\n        getMovieReview(movieId);\n    }, [movieId]);\n        \n    return (\n        <>\n        {status === 'pending' && <Loader />}\n        {status === 'resolved' && movieReview.length !== 0 ? (<ReviewGallery items={movieReview} />) : (<p>We don't have any reviews for this movies</p>)}\n        </>\n    )\n}\n\nexport default MovieReview;"],"names":["isAvailableImage","path","defaultImage","BASE_URL","API_KEY","fetchTrandingMovies","axios","response","movies","data","results","map","id","title","fetchMovieById","movieId","poster_path","overview","genres","vote_average","release_date","posterPath","genre","name","join","vote","toFixed","year","slice","fetchMovieCast","movieCast","cast","profile_path","character","fetchMovieReview","movieReview","author","content","fetchMoviesByQuery","query","totalResults","total_results","ReviewsList","styled","ReviewItem","ReviewTitle","items","useState","setMovieReview","status","setStatus","useParams","useEffect","getMovieReview","Review","console","error","Loader","length"],"sourceRoot":""}